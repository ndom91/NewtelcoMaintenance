# Select image from https://hub.docker.com/r/_/php/
image: php:7.1

cache:
  paths:
  - vendor/
  - node_modules/

# test:app:
#   before_script:
#   # Install dependencies
#     - bash ci/docker_install.sh > /dev/null
#     - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
#     - php composer-setup.php
#     - php -r "unlink('composer-setup.php');"
#     - php composer.phar require nesbot/carbon=1.29.*
#     - cp $CI_PROJECT_DIR/ci/memory_limit.ini /usr/local/etc/php/conf.d/memory_limit.ini
#   script:
#   #- phpunit --configuration phpunit_myapp.xml
#   #Static analysis
#     - phploc .
#   #phpmd check coding style
#   #- phpmd . text naming,design,unusedcode --suffixes php --ignore-violations-on-exit
#   # - phpmd . text unusedcode --suffixes php --ignore-violations-on-exit --exclude vendor/*
#   #checking Coding Standards with PHP Code Sniffer
#   #- phpcpd .
#   #Viewing Coding Standards Violations
#   #
#   # - phpcs --standard=PEAR --report=summary

build site:
  image: carlosalgms/composer-and-node-ci
  #image: tetraweb/php:7.1
  stage: build
  before_script:
  # Install dependencies
    - bash ci/docker_install.sh > /dev/null
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php composer-setup.php
    - php -r "unlink('composer-setup.php');"
    - docker-php-ext-install mysqli gd zip gmp
  script:
    #- php composer.phar install 
    - composer install --no-ansi --no-interaction --no-progress
    - npm install
  artifacts:
    expire_in: 6 hrs
    paths:
      - /builds/ndomino/maintenancedb/vendor
      - /builds/ndomino/maintenancedb/node_modules

deploy_staging:
  image: alpine
  stage: deploy
  only:
    - dev
  script:
    - apk add --no-cache rsync openssh
    - mkdir -p ~/.ssh
    - echo "$DEPLOY_PRIVATE_KEY" >> ~/.ssh/id_dsa
    - chmod 600 ~/.ssh/id_dsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - mkdir /builds/ndomino/maintenancedb/logs
    - mkdir /builds/ndomino/maintenancedb/msg
    - cp /builds/ndomino/maintenancedb/configs/dbconfig_template.ini /builds/ndomino/maintenancedb/configs/dbconfig_newtelcondo.ini 
    - sed  -i 's/username =/username = {$DB_USERNAME}/g' /builds/ndomino/maintenancedb/configs/dbconfig_newtelcondo.ini 
    - sed  -i 's/password =/password = {$DB_PASSWORD}/g' /builds/ndomino/maintenancedb/configs/dbconfig_newtelcondo.ini 
    - echo "$OAUTH_CREDENTIALS" >> /builds/ndomino/maintenancedb/configs/oauth_credentials.json
    - echo "$SERVICE_CREDENTIALS" >> /builds/ndomino/maintenancedb/configs/maintenanceapp-1dd9507b2c22.json
    - rsync -rav -e 'ssh -p 2424' --delete /builds/ndomino/maintenancedb/* ndo@94.249.131.5:/var/www/html/maintenance_stage
    - ssh -p 2424 'echo N3wt3lco | ndo@94.249.164.180 [[ -d /var/www/html/maintenance_stage ]] || sudo mkdir /var/www/html/maintenance_stage '
    - ssh -p 2424 'echo N3wt3lco | ndo@94.249.164.180 sudo chown -R www-data:ndo /var/www/html/maintenance_stage'

deploy_production:
  image: alpine
  stage: deploy
  only:
    - master
  script:
    - apk add --no-cache rsync openssh
    - mkdir -p ~/.ssh
    - echo "$DEPLOY_PRIVATE_KEY" >> ~/.ssh/id_dsa
    - chmod 600 ~/.ssh/id_dsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - mkdir /builds/ndomino/maintenancedb/logs
    - mkdir /builds/ndomino/maintenancedb/msg
    - cp /builds/ndomino/maintenancedb/configs/dbconfig_template.ini /builds/ndomino/maintenancedb/configs/dbconfig_newtelcondo.ini 
    - sed  -i 's/username =/username = '$DB_USERNAME'/g' /builds/ndomino/maintenancedb/configs/dbconfig_newtelcondo.ini 
    - sed  -i 's/password =/password = '$DB_PASSWORD'/g' /builds/ndomino/maintenancedb/configs/dbconfig_newtelcondo.ini 
    - echo "$OAUTH_CREDENTIALS" >> /builds/ndomino/maintenancedb/configs/oauth_credentials.json
    - echo "$SERVICE_CREDENTIALS" >> /builds/ndomino/maintenancedb/configs/maintenanceapp-1dd9507b2c22.json
    - rsync -rav -e 'ssh -p 2424' --delete /builds/ndomino/maintenancedb/* ndo@94.249.131.5:/var/www/html/maintenance_prod
    - ssh -p 2424 'echo N3wt3lco | ndo@94.249.164.180 [[ -d /var/www/html/maintenance_prod ]] || sudo mkdir /var/www/html/maintenance_prod '
    - ssh -p 2424 'echo N3wt3lco | ndo@94.249.164.180 sudo chown -R www-data:ndo /var/www/html/maintenance_prod'